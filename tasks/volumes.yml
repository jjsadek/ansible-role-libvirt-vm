---
- name: Ensure remote images are downloaded
  get_url:
    url: "{{ item }}"
    dest: "{{ libvirt_vm_image_cache_path }}/{{ item | basename }}"
  with_items: "{{ volumes | selectattr('image', 'defined') | map(attribute='image') | list }}"
  when: "'http' in item"

- name: Ensure local images are copied
  copy:
    src: "{{ item }}"
    dest: "{{ libvirt_vm_image_cache_path }}/{{ item | basename }}"
  with_items: "{{ volumes | selectattr('image', 'defined') | map(attribute='image') | list }}"
  when: "'http' not in item"

- name: Ensure the VM volumes exist
  script: >
    virt_volume.sh
    -n {{ item.name }}
    -p {{ item.pool |default('default') }}
    -c {{ item.capacity }}
    -f {{ item.format | default(libvirt_volume_default_format) }}
    {% if item.image is defined %}
    -i {{ libvirt_vm_image_cache_path }}/{{ item.image | basename }}
    {% elif item.backing_image is defined %}
    -b {{ item.backing_image }}
    {% endif %}
    -a {{ ansible_check_mode }}
  with_items: "{{ volumes }}"
#  when: item.type | default(libvirt_volume_default_type) == 'volume'
  environment: "{{ libvirt_vm_script_env }}"
  register: volume_result
  changed_when:
    - volume_result is success
    - (volume_result.stdout | from_json).changed | default(True)
  check_mode: False
  become: true
